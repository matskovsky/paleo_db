# -*- coding: utf-8 -*-
# Generated by Django 1.10.2 on 2017-01-04 18:46
from __future__ import unicode_literals

import datetime
import db.models
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import mptt.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0008_alter_user_username_max_length'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Act',
            fields=[
                ('status_accepted', models.SmallIntegerField(default=0)),
                ('status_published', models.SmallIntegerField(default=0)),
                ('id', models.IntegerField(default=0, primary_key=True, serialize=False)),
                ('dateAcquired', models.DateField(default=datetime.date.today, null=True)),
                ('group', models.CharField(max_length=64, null=True)),
                ('stratigraphicUnit', models.CharField(max_length=256, null=True)),
                ('collections_text', models.CharField(max_length=128, null=True)),
                ('sampleCount', models.CharField(max_length=64, null=True)),
                ('storageLocation_text', models.CharField(max_length=128, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Authorship',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order', models.SmallIntegerField(default=1)),
            ],
        ),
        migrations.CreateModel(
            name='Collection',
            fields=[
                ('status_accepted', models.SmallIntegerField(default=0)),
                ('status_published', models.SmallIntegerField(default=0)),
                ('id', models.IntegerField(default=0, primary_key=True, serialize=False)),
                ('number', models.IntegerField(default=0, unique=True)),
                ('dateRegistered', models.DateField(default=datetime.date.today, null=True)),
                ('dateRegistered_precision', models.CharField(max_length=40, null=True)),
                ('content', models.CharField(max_length=256, null=True)),
                ('stratigraphicUnit', models.CharField(max_length=256, null=True)),
                ('collectors_text', models.CharField(max_length=256, null=True)),
                ('location', models.TextField(null=True)),
                ('collectYears', models.CharField(max_length=128, null=True)),
                ('organizations_text', models.CharField(max_length=256, null=True)),
                ('quantity', models.CharField(max_length=128, null=True)),
                ('labs_text', models.CharField(max_length=256, null=True)),
                ('notes', models.CharField(max_length=512, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Description',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('newTaxon', models.CharField(choices=[('sn', 'sp. nov.'), ('ssn', 'subsp. nov.'), ('sgsn', 'subgen. et sp. nov.'), ('gn', 'gen. nov.'), ('gsn', 'gen. et sp. nov.'), ('nn', 'nom. nov.'), ('vn', 'var. nov.'), ('nul', '\u043d\u0435 \u0443\u043a\u0430\u0437\u0430\u043d\u043e')], default='nul', max_length=4)),
                ('publication_type', models.CharField(choices=[('frst', '\u043f\u0435\u0440\u0432\u043e\u043e\u043f\u0438\u0441\u0430\u043d\u0438\u0435'), ('next', '\u043f\u0435\u0440\u0435\u043e\u043f\u0438\u0441\u0430\u043d\u0438\u0435'), ('othr', '\u0434\u0440\u0443\u0433\u043e\u0435')], default='othr', max_length=4)),
                ('category', models.CharField(choices=[('hlt', '\u0433\u043e\u043b\u043e\u0442\u0438\u043f'), ('dbl', '\u0434\u0443\u0431\u043b\u0435\u0442'), ('lkt', '\u043b\u0435\u043a\u0442\u043e\u0442\u0438\u043f'), ('ntp', '\u043d\u0435\u043e\u0442\u0438\u043f'), ('org', '\u043e\u0440\u0438\u0433\u0438\u043d\u0430\u043b'), ('plt', '\u043f\u0430\u0440\u0430\u043b\u0435\u043a\u0442\u043e\u0442\u0438\u043f'), ('prt', '\u043f\u0430\u0440\u0430\u0442\u0438\u043f'), ('snt', '\u0441\u0438\u043d\u0442\u0438\u043f'), ('nul', '\u043d\u0435 \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d')], default='nul', max_length=3)),
                ('citation', models.CharField(max_length=512, null=True)),
                ('storage_indicated', models.NullBooleanField(default=True)),
                ('notes', models.CharField(max_length=512, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='geoLocation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('center', models.CharField(max_length=44, null=True)),
                ('extent', models.CharField(max_length=84, null=True)),
                ('geoJSON', models.TextField(null=True)),
                ('description', models.CharField(max_length=256, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Lab',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status_accepted', models.SmallIntegerField(default=0)),
                ('status_published', models.SmallIntegerField(default=0)),
                ('name', models.CharField(max_length=64, null=True)),
                ('shortName', models.CharField(max_length=64, null=True)),
                ('alternateName', models.CharField(max_length=64, null=True)),
                ('contacts', models.CharField(max_length=256, null=True)),
                ('group_owner', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='+', to='auth.Group')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Media',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='Organization',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status_accepted', models.SmallIntegerField(default=0)),
                ('status_published', models.SmallIntegerField(default=0)),
                ('name', models.CharField(max_length=64, null=True)),
                ('shortName', models.CharField(max_length=64, null=True)),
                ('alternateName', models.CharField(max_length=64, null=True)),
                ('contacts', models.CharField(max_length=256, null=True)),
                ('group_owner', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='+', to='auth.Group')),
                ('user_owner', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Periodical',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status_accepted', models.SmallIntegerField(default=0)),
                ('status_published', models.SmallIntegerField(default=0)),
                ('name', models.CharField(max_length=128, null=True)),
                ('shortName', models.CharField(max_length=64, null=True)),
                ('alternateName', models.CharField(max_length=128, null=True)),
                ('info', models.CharField(max_length=256, null=True)),
                ('group_owner', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='+', to='auth.Group')),
                ('user_owner', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Person',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status_accepted', models.SmallIntegerField(default=0)),
                ('status_published', models.SmallIntegerField(default=0)),
                ('firstName', models.CharField(max_length=64, null=True)),
                ('middleName', models.CharField(max_length=64, null=True)),
                ('lastName', models.CharField(max_length=64)),
                ('alternateName', models.CharField(max_length=64, null=True)),
                ('firstNameLatin', models.CharField(max_length=64, null=True)),
                ('middleNameLatin', models.CharField(max_length=64, null=True)),
                ('lastNameLatin', models.CharField(max_length=64, null=True)),
                ('alternateNameLatin', models.CharField(max_length=64, null=True)),
                ('contacts', models.CharField(max_length=256, null=True)),
                ('email', models.EmailField(max_length=254, null=True)),
                ('group_owner', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='+', to='auth.Group')),
                ('organizations', models.ManyToManyField(to='db.Organization')),
                ('user_owner', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PersonsGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('persons', models.ManyToManyField(through='db.Authorship', to='db.Person')),
            ],
        ),
        migrations.CreateModel(
            name='Publication',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status_accepted', models.SmallIntegerField(default=0)),
                ('status_published', models.SmallIntegerField(default=0)),
                ('authors_text', models.CharField(max_length=512, null=True)),
                ('year', models.CharField(max_length=4, validators=[db.models.validate_year])),
                ('title', models.CharField(max_length=512, null=True)),
                ('titleLatin', models.CharField(max_length=512, null=True)),
                ('periodical_text', models.CharField(max_length=128, null=True)),
                ('series', models.CharField(max_length=128, null=True)),
                ('volume', models.CharField(max_length=32, null=True)),
                ('issue', models.CharField(max_length=32, null=True)),
                ('issueTitle', models.CharField(max_length=128, null=True)),
                ('editors_text', models.CharField(max_length=128, null=True)),
                ('city', models.CharField(max_length=64, null=True)),
                ('publisher', models.CharField(max_length=128, null=True)),
                ('pages', models.CharField(max_length=128, null=True)),
                ('group', models.CharField(max_length=64, null=True)),
                ('notes', models.CharField(max_length=512, null=True)),
                ('shelfCodeUp', models.CharField(max_length=20, null=True)),
                ('shelfCodeDown', models.CharField(max_length=20, null=True)),
                ('authors', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='db.PersonsGroup')),
                ('editors', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='editors', to='db.PersonsGroup')),
                ('group_owner', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='+', to='auth.Group')),
                ('periodical', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='db.Periodical')),
                ('user_owner', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Sample',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status_accepted', models.SmallIntegerField(default=0)),
                ('status_published', models.SmallIntegerField(default=0)),
                ('number', models.CharField(default='', max_length=64)),
                ('country', models.CharField(max_length=64, null=True)),
                ('region', models.CharField(max_length=64, null=True)),
                ('regionSpec', models.CharField(max_length=64, null=True)),
                ('geologicalContext', models.CharField(max_length=64, null=True)),
                ('location', models.CharField(max_length=512, null=True)),
                ('verbatimLocation', models.CharField(max_length=512, null=True)),
                ('sistema', models.CharField(max_length=128, null=True)),
                ('yarus', models.CharField(max_length=128, null=True)),
                ('gorizont', models.CharField(max_length=128, null=True)),
                ('svita', models.CharField(max_length=128, null=True)),
                ('sloy', models.CharField(max_length=128, null=True)),
                ('type', models.CharField(max_length=256, null=True)),
                ('dateCollected', models.DateField(null=True)),
                ('dateCollected_precision', models.CharField(max_length=40, null=True)),
                ('storageLocation_text', models.CharField(max_length=128, null=True)),
                ('is_stored', models.NullBooleanField(default=True)),
                ('notes', models.CharField(max_length=512, null=True)),
                ('stickerSize', models.CharField(max_length=32, null=True)),
                ('id_old_DB', models.IntegerField(default=0, unique=True)),
                ('collection', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='db.Collection')),
                ('geoLocations', models.ManyToManyField(to='db.geoLocation')),
                ('group_owner', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='+', to='auth.Group')),
                ('publications', models.ManyToManyField(through='db.Description', to='db.Publication')),
                ('relatedMedia', models.ManyToManyField(to='db.Media')),
                ('responsiblePersons', models.ManyToManyField(to='db.Person')),
            ],
        ),
        migrations.CreateModel(
            name='storageLocation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status_accepted', models.SmallIntegerField(default=0)),
                ('status_published', models.SmallIntegerField(default=0)),
                ('name', models.CharField(max_length=64)),
                ('description', models.CharField(max_length=256, null=True)),
                ('stickerSize', models.CharField(choices=[('01', '\u0440\u0430\u0437\u043c\u0435\u0440 1'), ('02', '\u0440\u0430\u0437\u043c\u0435\u0440 2'), ('03', '\u0440\u0430\u0437\u043c\u0435\u0440 3'), ('04', '\u0440\u0430\u0437\u043c\u0435\u0440 4'), ('05', '\u0440\u0430\u0437\u043c\u0435\u0440 5'), ('06', '\u0440\u0430\u0437\u043c\u0435\u0440 6'), ('07', '\u0440\u0430\u0437\u043c\u0435\u0440 7'), ('08', '\u0440\u0430\u0437\u043c\u0435\u0440 8'), ('09', '\u0440\u0430\u0437\u043c\u0435\u0440 9'), ('10', '\u0440\u0430\u0437\u043c\u0435\u0440 10'), ('11', '\u0440\u0430\u0437\u043c\u0435\u0440 11'), ('12', '\u0440\u0430\u0437\u043c\u0435\u0440 12'), ('22', '\u0440\u0430\u0437\u043c\u0435\u0440 22'), ('91', '\u0440\u0430\u0437\u043c\u0435\u0440 91'), ('00', '\u043d\u0435 \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d')], default='00', max_length=2, null=True)),
                ('lft', models.PositiveIntegerField(db_index=True, editable=False)),
                ('rght', models.PositiveIntegerField(db_index=True, editable=False)),
                ('tree_id', models.PositiveIntegerField(db_index=True, editable=False)),
                ('level', models.PositiveIntegerField(db_index=True, editable=False)),
                ('group_owner', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='+', to='auth.Group')),
                ('parent', mptt.fields.TreeForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='db.storageLocation')),
                ('user_owner', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Taxon',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status_accepted', models.SmallIntegerField(default=0)),
                ('status_published', models.SmallIntegerField(default=0)),
                ('group', models.CharField(max_length=64, null=True)),
                ('genus', models.CharField(max_length=64, null=True)),
                ('subgenus', models.CharField(max_length=64, null=True)),
                ('species', models.CharField(max_length=64, null=True)),
                ('speciesAuthor', models.CharField(max_length=64, null=True)),
                ('speciesYear', models.CharField(max_length=4, validators=[db.models.validate_year])),
                ('subspecies', models.CharField(max_length=64, null=True)),
                ('subspeciesAuthor', models.CharField(max_length=64, null=True)),
                ('subspeciesYear', models.CharField(max_length=4, null=True, validators=[db.models.validate_year])),
                ('group_owner', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='+', to='auth.Group')),
                ('user_owner', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='sample',
            name='storageLocation',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='db.storageLocation'),
        ),
        migrations.AddField(
            model_name='sample',
            name='user_owner',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='lab',
            name='organization',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='db.Organization'),
        ),
        migrations.AddField(
            model_name='lab',
            name='user_owner',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='description',
            name='publication',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='db.Publication'),
        ),
        migrations.AddField(
            model_name='description',
            name='sample',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='db.Sample'),
        ),
        migrations.AddField(
            model_name='description',
            name='taxon',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='db.Taxon'),
        ),
        migrations.AddField(
            model_name='collection',
            name='collectors',
            field=models.ManyToManyField(to='db.PersonsGroup'),
        ),
        migrations.AddField(
            model_name='collection',
            name='geoLocations',
            field=models.ManyToManyField(to='db.geoLocation'),
        ),
        migrations.AddField(
            model_name='collection',
            name='group_owner',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='+', to='auth.Group'),
        ),
        migrations.AddField(
            model_name='collection',
            name='labs',
            field=models.ManyToManyField(to='db.Lab'),
        ),
        migrations.AddField(
            model_name='collection',
            name='organizations',
            field=models.ManyToManyField(to='db.Organization'),
        ),
        migrations.AddField(
            model_name='collection',
            name='responsiblePersons',
            field=models.ManyToManyField(to='db.Person'),
        ),
        migrations.AddField(
            model_name='collection',
            name='user_owner',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='authorship',
            name='group',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='db.PersonsGroup'),
        ),
        migrations.AddField(
            model_name='authorship',
            name='person',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='db.Person'),
        ),
        migrations.AddField(
            model_name='act',
            name='collections',
            field=models.ManyToManyField(to='db.Collection'),
        ),
        migrations.AddField(
            model_name='act',
            name='group_owner',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='+', to='auth.Group'),
        ),
        migrations.AddField(
            model_name='act',
            name='publications',
            field=models.ManyToManyField(to='db.Publication'),
        ),
        migrations.AddField(
            model_name='act',
            name='samples',
            field=models.ManyToManyField(to='db.Sample'),
        ),
        migrations.AddField(
            model_name='act',
            name='storageLocation',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='db.storageLocation'),
        ),
        migrations.AddField(
            model_name='act',
            name='user_owner',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterUniqueTogether(
            name='storagelocation',
            unique_together=set([('parent', 'name')]),
        ),
        migrations.AlterUniqueTogether(
            name='sample',
            unique_together=set([('collection', 'number')]),
        ),
    ]
